{"version":3,"file":"static/js/30.a56d59aa.chunk.js","mappings":"uOAqHA,UAtG4B,WAAO,IAAD,EAC1BA,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GACvBC,EACNH,EADMG,WAAYC,EAClBJ,EADkBI,KAAMC,EACxBL,EADwBK,MAAOC,EAC/BN,EAD+BM,UAAWC,EAC1CP,EAD0CO,MAAOC,EACjDR,EADiDQ,oBAG7CC,GAAWC,EAAAA,EAAAA,MAEXC,GADWC,EAAAA,EAAAA,MACMD,MACjBE,EAAI,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOE,YAAV,aAAG,EAAaC,SAS1B,OAPAC,EAAAA,EAAAA,YAAU,WACRP,IACIL,GAAcC,GAChBK,EAASI,GAAc,IAAK,CAAEG,SAAS,MAExC,CAACb,EAAYC,EAAMK,EAAUI,EAAML,KAGpC,qBAASS,UAAU,8BAAnB,WACE,eAAIA,UAAU,cAAd,6BACA,SAAC,KAAD,CACEC,iBAAkBC,EAAAA,GAAW,CAC3BC,MAAOD,EAAAA,KACJC,MAAM,iCACNC,OACAC,SAAS,eACZC,SAAUJ,EAAAA,KAAaG,SAAS,iBAElCE,cAAe,CAAEJ,MAAO,GAAIG,SAAU,IACtCE,SAAU,cAAyC,IAAtCL,EAAqC,EAArCA,MAAOG,EAA8B,EAA9BA,SAAcG,EAAgB,EAAhBA,UAChCnB,EAAMa,EAAOG,EAAUV,GACvBa,KAXJ,SAcG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,CAAMX,UAAS,qBAAf,WACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,eAAf,WACE,kBAAOY,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,KAAK,QACLb,UAAS,uBACPU,EAAOP,OAASQ,EAAQR,MAAQ,aAAe,OAGnD,SAAC,KAAD,CAAcU,KAAK,QAAnB,SACG,SAACC,GAAD,OAAS,gBAAKd,UAAU,YAAf,SAA4Bc,aAK5C,gBAAKd,UAAU,YAAf,UACE,iBAAKA,UAAU,eAAf,WACE,kBAAOY,QAAQ,WAAf,oBACA,SAAC,KAAD,CACEC,KAAK,WACLE,KAAK,WACLf,UAAS,uBACPU,EAAOJ,UAAYK,EAAQL,SAAW,aAAe,OAGzD,SAAC,KAAD,CAAcO,KAAK,WAAnB,SACG,SAACC,GAAD,OAAS,gBAAKd,UAAU,YAAf,SAA4Bc,aAI5C,gBAAKd,UAAU,cAAf,UACE,SAAC,IAAD,CAAQe,KAAK,SAASf,UAAU,oBAAhC,kCAIF,iBAAKA,UAAU,mBAAf,WACE,+CAEE,SAAC,KAAD,CAAMgB,GAAI,mBAAoBhB,UAAU,OAAxC,+BAIF,8DAEE,SAAC,KAAD,CAAMgB,GAAI,YAAahB,UAAU,OAAjC,0CAQC,KAAVZ,IACC,gBAAKY,UAAU,wBAAf,UACE,uBAAIZ,MAGPC,GAAuB,KAAVD,IACZ,gBAAKY,UAAU,WAAf,UACE,SAAC,IAAD","sources":["pages/LoginPage.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport AuthContext from '../store/auth-context';\r\n\r\ninterface CustomizedState {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, user, error, isLoading, login, resetStateVariables } =\r\n    authContext;\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const state = location.state as CustomizedState;\r\n  const from = state?.from?.pathname;\r\n\r\n  useEffect(() => {\r\n    resetStateVariables();\r\n    if (isLoggedIn && user) {\r\n      navigate(from ? from : '/', { replace: true });\r\n    }\r\n  }, [isLoggedIn, user, navigate, from, resetStateVariables]);\r\n\r\n  return (\r\n    <section className=\"logreg-container text-start\">\r\n      <h3 className=\"text-center\">Prihlásenie</h3>\r\n      <Formik\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email('Nesprávny formát emailu')\r\n            .trim()\r\n            .required('*Povinné'),\r\n          password: Yup.string().required('*Povinné'),\r\n        })}\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={({ email, password }, { resetForm }) => {\r\n          login(email, password, from);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  className={`form-control ${\r\n                    errors.email && touched.email ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"email\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"password\">Heslo</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={`form-control ${\r\n                    errors.password && touched.password ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"password\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-50-991-100 \">\r\n                Prihlásiť\r\n              </Button>\r\n            </div>\r\n            <div className=\"mt-4 text-center\">\r\n              <p>\r\n                Zabudli ste heslo?\r\n                <Link to={'/forgot-password'} className=\"ms-2\">\r\n                  Obnovte si ho\r\n                </Link>\r\n              </p>\r\n              <p>\r\n                Ešte nemáte účet?\r\n                <Link to={'/register'} className=\"ms-2\">\r\n                  Zaregistrujte sa\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {error !== '' && (\r\n        <div className=\"centered h4 error-msg\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      {isLoading && error === '' && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["authContext","useContext","AuthContext","isLoggedIn","user","error","isLoading","login","resetStateVariables","navigate","useNavigate","state","useLocation","from","pathname","useEffect","replace","className","validationSchema","Yup","email","trim","required","password","initialValues","onSubmit","resetForm","errors","touched","htmlFor","name","msg","type","to"],"sourceRoot":""}