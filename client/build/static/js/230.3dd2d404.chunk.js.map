{"version":3,"file":"static/js/230.3dd2d404.chunk.js","mappings":"sKAoCA,IAzB4C,SAACA,GAC3C,OACE,UAAC,IAAD,CACEC,UAAWD,EAAMC,UACjBC,KAAMF,EAAME,KACZC,OAAQH,EAAMG,OACdC,UAAU,EAJZ,WAME,SAAC,WAAD,CAAcC,aAAW,EAAzB,UACE,SAAC,UAAD,UACGL,EAAMM,WAGX,UAAC,SAAD,YACE,wBAAKN,EAAMO,cACVP,EAAMQ,aAET,UAAC,WAAD,YACE,SAAC,IAAD,CAAQC,QAAST,EAAMU,UAAvB,4BACA,SAAC,IAAD,CAAQD,QAAST,EAAMG,OAAvB,sC,yECWR,IA7B4C,SAACH,GAC3C,OAA4CW,EAAAA,EAAAA,WAAkB,GAA9D,eAAOC,EAAP,KAAuBC,EAAvB,KAUA,OACE,iCACE,SAAC,IAAD,CACEX,KAAMU,EACNL,YACEP,EAAMO,YAAcP,EAAMO,YAAc,8BAE1CJ,OAfoB,WACxBU,GAAkB,IAedP,MAAON,EAAMM,MAAQN,EAAMM,MAAQ,0CACnCI,UAAWV,EAAMc,YAEnB,SAAC,IAAD,CAAQC,QAAQ,SAASN,QAfH,WACxBI,GAAkB,IAcqCZ,UAAWD,EAAMC,UAAYD,EAAMC,UAAY,OAApG,+B,4JC0EN,UA7FkC,SAACD,GAAW,IAAD,EACrCgB,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAErBC,GADSC,EAAAA,EAAAA,MACOD,OAChBE,GAAWC,EAAAA,EAAAA,MAEXC,GAAUN,EAAAA,EAAAA,YAAWO,EAAAA,GACnBC,EAA4CF,EAA5CE,UAAWC,EAAiCH,EAAjCG,KAAMC,EAA2BJ,EAA3BI,WAAYC,EAAeL,EAAfK,WACnBC,EAAyBH,EAAnCI,SAAkBC,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,OAEjCC,EAAAA,EAAAA,YAAU,WAC6B,IAAD,EAAhCd,GAAUe,SAASf,GAAU,IAC3Be,SAASf,MAAT,UAAqBH,EAAQmB,YAA7B,aAAqB,EAAcC,IACrCf,EAAS,WAAY,CAAEgB,SAAS,IAEhCZ,EAAUS,SAASf,OAGtB,CAACM,EAAWN,EAAZ,UAAoBH,EAAQmB,YAA5B,aAAoB,EAAcC,GAAIf,IAezC,MAAe,YAAXQ,GAEA,gBAAK5B,UAAU,WAAf,UACE,SAAC,IAAD,MAMJ+B,GACW,YAAXH,GACY,aAAXA,KAA2BE,GAA0B,IAAjBA,EAAMO,SAGzC,cAAGrC,UAAU,sCAAb,SACa,wCAAV+B,EAAA,uCACsBb,EADtB,wBAEGa,KAMR,+BACE,SAAC,IAAD,CAAUG,KAAMJ,EAAM,GAAtB,UACE,UAAC,IAAD,CAAoBQ,aAAc,CAACC,EAAAA,GAAAA,OAAnC,WACE,SAAC,IAAD,CACEC,SAAS,wBACTC,WAAW,sBACXC,WAAW,UACXC,MAAM,SAAC,IAAD,IACN3C,UAAW,2BALb,UAOE,SAAC,IAAD,CACE4C,iBAAiB,EACjBC,gBAAgB,EAChBC,SAAUhB,EAAM,GAChBiB,aAAa,cACbC,SAAU,SAACC,GAnDD,IAACd,EAASe,EAATf,EAoDKjB,EApDIgC,EAoDI,CACpBC,MAAOF,EAAOE,MACdC,UAAWH,EAAOG,UAClBC,SAAUJ,EAAOI,SACjBC,KAAML,EAAOK,MAvDvBnB,GAAoB,kBAAPA,GACfT,EAAWO,SAASE,GAAKe,GAAM,SA2D3B,SAAC,IAAD,CACElD,UAAU,gCACVa,SAzDY,SAACsB,GACjBA,GAAoB,kBAAPA,IACfR,EAAWM,SAASE,IACpBf,EAAS,SAAU,CAAEgB,SAAS,MAsDAmB,KAAK,KAAMrC,GACnCb,MAAM,gDACNC,YAAW","sources":["components/UI/ConfirmModalDialog.tsx","components/UI/DeleteDialogButton.tsx","pages/UserPage.tsx"],"sourcesContent":["import { Modal, Button } from \"react-bootstrap\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n  title: string;\r\n  headerTitle: string;\r\n  show: boolean;\r\n  onHide: () => void;\r\n  onConfirm: () => void;\r\n};\r\n\r\nconst ConfirmModalDialog: React.FC<Props> = (props) => {\r\n  return (\r\n    <Modal\r\n      className={props.className}\r\n      show={props.show}\r\n      onHide={props.onHide}\r\n      backdrop={true}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>\r\n          {props.title}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h5>{props.headerTitle}</h5>\r\n        {props.children}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onConfirm}>Potvrdiť</Button>\r\n        <Button onClick={props.onHide}>Zrušiť</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModalDialog;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport ConfirmModalDialog from \"./ConfirmModalDialog\";\r\n\r\ntype Props = {\r\n  headerTitle?: string;\r\n  title?: string;\r\n  onDelete: () => void;\r\n  className?: string;\r\n};\r\n\r\nconst DeleteDialogButton: React.FC<Props> = (props) => {\r\n  const [isShowedDialog, setIsShowedDialog] = useState<boolean>(false);\r\n\r\n  const hideDialogHandler = () => {\r\n    setIsShowedDialog(false);\r\n  };\r\n\r\n  const showDialogHandler = () => {\r\n    setIsShowedDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModalDialog\r\n        show={isShowedDialog}\r\n        headerTitle={\r\n          props.headerTitle ? props.headerTitle : \"Potvrdenie vymazania topiku\"\r\n        }\r\n        onHide={hideDialogHandler}\r\n        title={props.title ? props.title : \"Naozaj chcete vymazať tento topik?\"}\r\n        onConfirm={props.onDelete}\r\n      />\r\n      <Button variant=\"danger\" onClick={showDialogHandler} className={props.className ? props.className : \"ms-2\"} >\r\n        Vymazať\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteDialogButton;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport OptionIcon from \"../assets/icons/OptionsIcon\";\r\nimport DeleteDialogButton from \"../components/UI/DeleteDialogButton\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport ModalFormButton from \"../components/UI/ModalFormButton\";\r\nimport ProtectedComponent from \"../components/UI/ProtectedComponent\";\r\nimport UserForm from \"../components/users/UserForm\";\r\nimport UserInfo from \"../components/users/UserInfo\";\r\nimport { UserRequest, UserRole } from \"../models/User\";\r\nimport AuthContext from \"../store/auth-context\";\r\nimport UserContext from \"../store/user-context\";\r\n\r\ntype Props = {};\r\n\r\nconst UserPage: React.FC<Props> = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const params = useParams();\r\n  const userId = params.userId;\r\n  const navigate = useNavigate();\r\n\r\n  const userCtx = useContext(UserContext);\r\n  const { fetchById, data, updateUser, deleteUser } = userCtx;\r\n  const { opStatus: status, users, error } = data;\r\n\r\n  useEffect(() => {\r\n    if (userId && parseInt(userId) > 0) {\r\n      if (parseInt(userId) === authCtx.user?.id) {\r\n        navigate(\"/profile\", { replace: true });\r\n      } else {\r\n        fetchById(parseInt(userId));\r\n      }\r\n    }\r\n  }, [fetchById, userId, authCtx.user?.id, navigate]);\r\n\r\n  const updateHandler = (id: any, body: UserRequest) => {\r\n    if (id && typeof id === \"string\") {\r\n      updateUser(parseInt(id), body, true);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (id: any) => {\r\n    if (id && typeof id === \"string\") {\r\n      deleteUser(parseInt(id));\r\n      navigate(\"/users\", { replace: true });\r\n    }\r\n  };\r\n\r\n  if (status === \"Pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (\r\n    error ||\r\n    status === \"Failure\" ||\r\n    (status === \"Finished\" && (!users || users.length === 0))\r\n  ) {\r\n    return (\r\n      <p className=\"centerVertical h1 bg-info py-2 px-3\">\r\n        {error === \"Request failed with status code 404\"\r\n          ? `Používateľ s ID ${userId} nebol nájdený`\r\n          : error}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UserInfo user={users[0]}>\r\n        <ProtectedComponent requiredRole={[UserRole.ADMIN]}>\r\n          <ModalFormButton\r\n            btnTitle=\"Upraviť údaje\"\r\n            modalTitle=\"Úprava údajov\"\r\n            btnVariant=\"warning\"\r\n            icon={<OptionIcon />}\r\n            className={\"me-md-2 width-50-991-100\"}\r\n          >\r\n            <UserForm\r\n              allowRoleChange={true}\r\n              ignorePassword={true}\r\n              formData={users[0]}\r\n              onSubmitText=\"Zmeniť\"\r\n              onSubmit={(values: any) => {\r\n                updateHandler(userId, {\r\n                  email: values.email,\r\n                  firstname: values.firstname,\r\n                  lastname: values.lastname,\r\n                  role: values.role,\r\n                });\r\n              }}\r\n            />\r\n          </ModalFormButton>\r\n          <DeleteDialogButton\r\n            className=\"me-md-2 width-50-991-100 mt-2\"\r\n            onDelete={deleteHandler.bind(null, userId)}\r\n            title=\"Potvrdenie vymazania používateľa\"\r\n            headerTitle={`Naozaj chcete vymazať tohto používateľa?`}\r\n          />\r\n        </ProtectedComponent>\r\n      </UserInfo>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n"],"names":["props","className","show","onHide","backdrop","closeButton","title","headerTitle","children","onClick","onConfirm","useState","isShowedDialog","setIsShowedDialog","onDelete","variant","authCtx","useContext","AuthContext","userId","useParams","navigate","useNavigate","userCtx","UserContext","fetchById","data","updateUser","deleteUser","status","opStatus","users","error","useEffect","parseInt","user","id","replace","length","requiredRole","UserRole","btnTitle","modalTitle","btnVariant","icon","allowRoleChange","ignorePassword","formData","onSubmitText","onSubmit","values","body","email","firstname","lastname","role","bind"],"sourceRoot":""}