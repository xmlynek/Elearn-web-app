{"version":3,"file":"static/js/458.2ca236c3.chunk.js","mappings":"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","sources":["components/Layout/ContainerWrapper.tsx","components/Layout/ModalLayout.tsx","webpack://bp-frontend-typescript/./src/components/topics/TopicForm.module.css?dd35","components/topics/TopicForm.tsx","components/topics/TopicList.tsx","pages/AllTopicsPage.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import { Container } from \"react-bootstrap\";\r\n\r\nconst ContainerWrapper: React.FC = (props) => {\r\n  return (\r\n    <Container className=\"container-content my-sm-4 my-xl-5 pb-3 pb-sm-4 pb-lg-5\">\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContainerWrapper;\r\n","import { Modal } from 'react-bootstrap';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  title: string | React.ReactNode;\r\n  show: boolean;\r\n  onHide: () => void;\r\n  backdropType?: string;\r\n};\r\n\r\nconst ModalLayout: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className={props.className}\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size={'lg'}\r\n        backdrop={props.backdropType === 'static' ? 'static' : true}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {props.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>{translations?.modalLayoutBodyLabel}</h5>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dropZone\":\"TopicForm_dropZone__LVPfo\",\"dropzoneLabel\":\"TopicForm_dropzoneLabel__uXskC\"};","import React, { FormEvent, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nimport classes from './TopicForm.module.css';\r\nimport TopicClass from '../../models/TopicClass';\r\nimport Dropzone from 'react-dropzone';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  formField?: TopicClass;\r\n  onSubmit: (topic: FormData) => void;\r\n  onSubmitText?: string | React.ReactNode;\r\n};\r\n\r\nconst TopicForm: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  const [files, setFiles] = useState<Array<File>>([]);\r\n  const [fileErr, setFileErr] = useState<String | null>(null);\r\n  const [title, setTitle] = useState<any>(\r\n    props.formField ? props.formField.title : ''\r\n  );\r\n  const [titleErr, setTitleErr] = useState<String | null>(null);\r\n\r\n  const onDropHandler = (acceptedFiles: File[]) => {\r\n    if (acceptedFiles.length !== 1) {\r\n      setFileErr(translations!.mustInsertOnePDFFileErr);\r\n      setFiles([]);\r\n    } else {\r\n      setFileErr(null);\r\n      setFiles(acceptedFiles);\r\n    }\r\n  };\r\n\r\n  const titleOnChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTitle(e.target.value);\r\n    if (e.target.value === '') {\r\n      setTitleErr(translations!.isRequiredErr);\r\n    } else {\r\n      setTitleErr(null);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('title', title);\r\n\r\n    let err = 0;\r\n    if (title === '') {\r\n      setTitleErr(translations!.isRequiredErr);\r\n      err = 1;\r\n    } else if (props.formField) {\r\n      props.onSubmit(formData);\r\n    }\r\n    if (files.length !== 1) {\r\n      setFileErr(translations!.mustInsertOnePDFFileErr);\r\n      err = 1;\r\n    }\r\n    if (err) {\r\n      return;\r\n    }\r\n    if (fileErr || titleErr) {\r\n      return;\r\n    }\r\n\r\n    formData.append('file', files[0]);\r\n    props.onSubmit(formData);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <hr />\r\n      <Form.Label htmlFor=\"topic_title\" className=\"h3\">\r\n        {translations?.titleLabel}\r\n      </Form.Label>\r\n      <Form.Control\r\n        id=\"topic_title\"\r\n        value={title ? title : ''}\r\n        onChange={titleOnChangeHandler}\r\n      ></Form.Control>\r\n      {titleErr && <p className=\"error-msg h5\">{titleErr}</p>}\r\n      <hr />\r\n      <h2 className=\"h3\">{translations?.topicFormAddPDFFileLabel}</h2>\r\n      <Dropzone\r\n        onDrop={onDropHandler}\r\n        maxFiles={1}\r\n        accept={{ 'application/pdf': ['.pdf'] }}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div\r\n              {...getRootProps()}\r\n              className={`${classes.dropZone} ${classes.dropzoneLabel}`}\r\n            >\r\n              <input {...getInputProps()} accept=\"application/pdf\" />\r\n              <p className={`h5`}>\r\n                {files.length === 0 ? (\r\n                  translations?.topicFormDragSelectPDFFileLabel\r\n                ) : (\r\n                  <span>\r\n                    {translations?.titleLabel}: {files.at(0)?.name} <br />\r\n                    {translations?.typeLabel}: {files.at(0)?.type}\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n      {fileErr && <p className=\"error-msg h4\">{fileErr}</p>}\r\n      <div className=\"text-center\">\r\n        <Button type=\"submit\" className=\"width-responsive mt-4\">\r\n          {props.onSubmitText ? props.onSubmitText : 'Vytvoriť topik'}\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TopicForm;\r\n","import { ListGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport TopicClass from \"../../models/TopicClass\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n  topics: TopicClass[];\r\n};\r\n\r\nconst TopicList: React.FC<Props> = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ListGroup className={props.className}>\r\n      {props.topics.map((topic) => (\r\n        <ListGroup.Item\r\n          key={topic.id}\r\n          action\r\n          onClick={() => {\r\n            navigate(`/topics/${topic.id}`);\r\n          }}\r\n        >\r\n          <p className=\"h4\">{topic.title}</p>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default TopicList;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport ModalLayout from '../components/Layout/ModalLayout';\r\n\r\nimport TopicForm from '../components/topics/TopicForm';\r\nimport TopicList from '../components/topics/TopicList';\r\nimport ContainerWrapper from '../components/Layout/ContainerWrapper';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport ProtectedComponent from '../components/UI/ProtectedComponent';\r\nimport { UserRole } from '../models/User';\r\nimport TopicContext from '../store/topic-context';\r\nimport useLangTranslation from '../hooks/useLangTranslation';\r\n\r\nfunction AllTopicsPage() {\r\n  const translations = useLangTranslation();\r\n  const topicCtx = useContext(TopicContext);\r\n  const { error, opStatus: status, topics } = topicCtx.data;\r\n  const fetchAll = topicCtx.fetchAll;\r\n\r\n  const [isShown, setIsShown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, [fetchAll]);\r\n\r\n  let output;\r\n\r\n  const newTopic = (\r\n    <ProtectedComponent requiredRole={[UserRole.ADMIN, UserRole.TEACHER]}>\r\n      <div className=\"centered\">\r\n        <Button onClick={() => setIsShown(true)}>\r\n          {translations?.createNewTopicTitle}\r\n        </Button>\r\n        <ModalLayout\r\n          title={translations?.createNewTopicTitle}\r\n          backdropType={'static'}\r\n          show={isShown}\r\n          onHide={() => setIsShown(false)}\r\n        >\r\n          <TopicForm\r\n            onSubmitText={translations?.createTopicSubmitButtonTitle}\r\n            onSubmit={(data: FormData) => {\r\n              topicCtx.saveTopic(data);\r\n              setIsShown(false);\r\n            }}\r\n          />\r\n        </ModalLayout>\r\n      </div>\r\n    </ProtectedComponent>\r\n  );\r\n\r\n  if (status === 'Pending') {\r\n    output = (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || status === 'Failure') {\r\n    output = <p className=\"centered h4 error-msg\">{error}</p>;\r\n  }\r\n\r\n  if (status === 'Finished' && (!topics || topics.length === 0)) {\r\n    output = (\r\n      <>\r\n        <div className=\"centered\">\r\n          <p className=\"h4\">{translations?.noTopicsFound}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'Finished' && !error && topics && topics.length > 0) {\r\n    output = (\r\n      <>\r\n        <div className=\"maxwidth-720\">\r\n          <TopicList className=\"center h5\" topics={topics} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerWrapper>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"centered\">\r\n            <h2 className=\"display-2 txt-main\">\r\n              {translations?.topicListPageHeader}\r\n            </h2>\r\n          </div>\r\n          {newTopic}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>{output}</Col>\r\n      </Row>\r\n    </ContainerWrapper>\r\n  );\r\n}\r\n\r\nexport default AllTopicsPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["props","className","children","translations","useLangTranslation","show","onHide","size","backdrop","backdropType","centered","closeButton","id","title","modalLayoutBodyLabel","useState","files","setFiles","fileErr","setFileErr","formField","setTitle","titleErr","setTitleErr","Form","onSubmit","e","preventDefault","formData","FormData","append","err","isRequiredErr","length","mustInsertOnePDFFileErr","htmlFor","titleLabel","value","onChange","target","topicFormAddPDFFileLabel","onDrop","acceptedFiles","maxFiles","accept","getRootProps","getInputProps","classes","topicFormDragSelectPDFFileLabel","at","name","typeLabel","type","Button","onSubmitText","navigate","useNavigate","ListGroup","topics","map","topic","action","onClick","output","topicCtx","useContext","TopicContext","data","error","status","opStatus","fetchAll","isShown","setIsShown","useEffect","newTopic","ProtectedComponent","requiredRole","UserRole","createNewTopicTitle","ModalLayout","TopicForm","createTopicSubmitButtonTitle","saveTopic","LoadingSpinner","noTopicsFound","ContainerWrapper","Row","Col","topicListPageHeader","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","variant","as","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}