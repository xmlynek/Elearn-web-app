{"version":3,"file":"static/js/722.d13ff936.chunk.js","mappings":"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","sources":["components/users/ChangePasswordForm.tsx","pages/ProfilePage.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\n\r\ntype Props = {\r\n    onSubmit: (values: any) => void;\r\n    onSubmitText?: string;\r\n  };\r\n\r\nconst ChangePasswordForm: React.FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          currentPassword: \"\",\r\n          newPassword: \"\",\r\n          confirmNewPassword: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          currentPassword: Yup.string().trim().required(\"*Povinné\"),\r\n          newPassword: Yup.string()\r\n            .trim()\r\n            .required(\"*Povinné\")\r\n            .min(8, \"Heslo musí mať aspoň 8 znakov\")\r\n            .max(255, \"Maximálny počet znakov je 255\")\r\n            .matches(/\\d/, \"Heslo musí obsahovať aspoň jednu číslicu\")\r\n            .matches(/[a-zA-Z]/, \"Heslo musí obsahovať aspoň jedno písmeno\"),\r\n          confirmNewPassword: Yup.string()\r\n            .trim()\r\n            .required(\"*Povinné\")\r\n            .oneOf([Yup.ref(\"newPassword\")], \"Heslá sa musia zhodovať\"),\r\n        })}\r\n        onSubmit={(values) => {\r\n            props.onSubmit(values);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"currentPassword\">Súčasné heslo</label>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"currentPassword\"\r\n                  className={`form-control ${\r\n                    errors.currentPassword && touched.currentPassword\r\n                      ? \"is-invalid\"\r\n                      : \"\"\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"currentPassword\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"newPassword\">Nové heslo</label>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  className={`form-control ${\r\n                    errors.newPassword && touched.newPassword\r\n                      ? \"is-invalid\"\r\n                      : \"\"\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"newPassword\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"confirmNewPassword\">\r\n                  Potvrdenie nového hesla\r\n                </label>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"confirmNewPassword\"\r\n                  className={`form-control ${\r\n                    errors.confirmNewPassword && touched.confirmNewPassword\r\n                      ? \"is-invalid\"\r\n                      : \"\"\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"confirmNewPassword\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-responsive\">\r\n                Potvrdiť zmenu\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import { useContext, useState } from \"react\";\r\nimport { patch } from \"../api/genericApi\";\r\nimport OptionIcon from \"../assets/icons/OptionsIcon\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport ModalFormButton from \"../components/UI/ModalFormButton\";\r\nimport ChangePasswordForm from \"../components/users/ChangePasswordForm\";\r\nimport UserForm from \"../components/users/UserForm\";\r\nimport UserInfo from \"../components/users/UserInfo\";\r\nimport usePrivateAxios from \"../hooks/usePrivateAccessTokenAxios\";\r\nimport {\r\n  PatchUserDataRequest,\r\n  UserChangePasswordRequest,\r\n} from \"../models/User\";\r\nimport AuthContext from \"../store/auth-context\";\r\n\r\nconst ProfilePage: React.FC = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const axiosPrivate = usePrivateAxios(\"/users\");\r\n  const { user } = authCtx;\r\n  const [state, setState] = useState<{\r\n    type?: \"err\" | \"success\";\r\n    msg: string;\r\n    isLoading: boolean;\r\n  }>({\r\n    msg: \"\",\r\n    isLoading: false,\r\n  });\r\n\r\n  const onChangeDataHandler = async (\r\n    userId: number,\r\n    data: PatchUserDataRequest\r\n  ) => {\r\n    setState({ msg: \"\", isLoading: true });\r\n    try {\r\n      const res = await patch<PatchUserDataRequest>(\r\n        axiosPrivate,\r\n        userId,\r\n        data\r\n      );\r\n      authCtx.updateUserData(res);\r\n      setState({\r\n        msg: \"Údaje boli úspešne zmenené\",\r\n        type: \"success\",\r\n        isLoading: false,\r\n      });\r\n    } catch (err: any) {\r\n      if (err.response.data.message) {\r\n        setState({\r\n          type: \"err\",\r\n          msg:\r\n            err.response.data.message === \"Invalid password\"\r\n              ? \"Nesprávne heslo\"\r\n              : err.response.data.message,\r\n          isLoading: false,\r\n        });\r\n      } else {\r\n        setState({ type: \"err\", msg: err.message, isLoading: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChangePasswordHandler = async (\r\n    userId: number,\r\n    passwords: UserChangePasswordRequest\r\n  ) => {\r\n    setState({ msg: \"\", isLoading: true });\r\n    try {\r\n      await patch<UserChangePasswordRequest>(axiosPrivate, userId, passwords);\r\n      setState({\r\n        msg: \"Heslo bolo úspešne zmenené\",\r\n        type: \"success\",\r\n        isLoading: false,\r\n      });\r\n    } catch (err: any) {\r\n      if (err.response.data.message) {\r\n        setState({\r\n          type: \"err\",\r\n          msg:\r\n            err.response.data.message === \"Invalid password\"\r\n              ? \"Nesprávne heslo\"\r\n              : err.response.data.message,\r\n          isLoading: false,\r\n        });\r\n      } else {\r\n        setState({ type: \"err\", msg: err.message, isLoading: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  const callbackFuncHandler = () => {\r\n    setState({ msg: \"\", isLoading: false });\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"centered\">\r\n        Používateľ nebol nájdený, skúste sa prihlásiť znova\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const stateLoadingAndErrorOutput = (\r\n    <>\r\n      {\" \"}\r\n      {state.isLoading && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {state.type === \"err\" && state.msg !== \"\" && (\r\n        <div className=\"centered error-msg\">\r\n          <p className=\"h4\">{state.msg}</p>\r\n        </div>\r\n      )}\r\n      {state.type === \"success\" && state.msg !== \"\" && (\r\n        <div className=\"centered\">\r\n          <p className=\"h4\">{state.msg}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <UserInfo user={user} header=\"Váš profil\">\r\n      <ModalFormButton\r\n        callbackFunc={callbackFuncHandler}\r\n        btnTitle=\"Upraviť údaje\"\r\n        modalTitle=\"Úprava údajov\"\r\n        btnVariant=\"warning\"\r\n        icon={<OptionIcon />}\r\n        className={\"me-md-2 width-50-991-100\"}\r\n      >\r\n        <UserForm\r\n          formData={user}\r\n          onSubmitText=\"Zmeniť\"\r\n          onSubmit={(val: any) => {\r\n            onChangeDataHandler(user.id, {\r\n              email: val.email,\r\n              firstname: val.firstname,\r\n              lastname: val.lastname,\r\n              password: val.password,\r\n            });\r\n          }}\r\n        />\r\n        {stateLoadingAndErrorOutput}\r\n      </ModalFormButton>\r\n\r\n      <ModalFormButton\r\n        callbackFunc={callbackFuncHandler}\r\n        btnTitle=\"Zmeniť heslo\"\r\n        modalTitle=\"Zmena hesla\"\r\n        btnVariant=\"warning\"\r\n        icon={<OptionIcon />}\r\n        className={\"me-md-2 width-50-991-100 mt-2\"}\r\n      >\r\n        <ChangePasswordForm\r\n          onSubmit={(values: any) => {\r\n            onChangePasswordHandler(user.id, {\r\n              password: values.currentPassword,\r\n              newPassword: values.newPassword,\r\n              confirmNewPassword: values.confirmNewPassword,\r\n            });\r\n          }}\r\n        />\r\n        {stateLoadingAndErrorOutput}\r\n      </ModalFormButton>\r\n    </UserInfo>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["props","initialValues","currentPassword","newPassword","confirmNewPassword","validationSchema","Yup","trim","required","min","max","matches","oneOf","onSubmit","values","errors","touched","className","htmlFor","type","name","msg","Button","authCtx","useContext","AuthContext","axiosPrivate","usePrivateAxios","user","useState","isLoading","state","setState","onChangeDataHandler","userId","data","patch","res","updateUserData","response","message","onChangePasswordHandler","passwords","callbackFuncHandler","stateLoadingAndErrorOutput","LoadingSpinner","UserInfo","header","ModalFormButton","callbackFunc","btnTitle","modalTitle","btnVariant","icon","UserForm","formData","onSubmitText","val","id","email","firstname","lastname","password"],"sourceRoot":""}