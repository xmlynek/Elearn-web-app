{"version":3,"file":"static/js/9.54dd030d.chunk.js","mappings":"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","sources":["components/users/UserForm.tsx","pages/RegistrationPage.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport User, { UserRole } from '../../models/User';\r\nimport * as Yup from 'yup';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ntype Props = {\r\n  formData?: User;\r\n  onSubmit: Function;\r\n  onSubmitText?: string;\r\n  registration?: boolean;\r\n  ignorePassword?: boolean;\r\n  allowRoleChange?: boolean;\r\n};\r\n\r\nconst UserForm: React.FC<Props> = (props) => {\r\n  const initialValues = props.formData\r\n    ? {\r\n        firstname: props.formData.firstname,\r\n        lastname: props.formData.lastname,\r\n        email: props.formData.email,\r\n        password: '',\r\n        role: props.formData.role,\r\n      }\r\n    : {\r\n        email: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        role: UserRole.USER,\r\n        password: '',\r\n        confirmPassword: '',\r\n        confirmProcessData: props.registration ? false : true,\r\n      };\r\n\r\n  let validationSchema;\r\n\r\n  if (props.registration) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required('*Povinné'),\r\n      lastname: Yup.string().trim().required('*Povinné'),\r\n      email: Yup.string()\r\n        .email('Nesprávny formát emailu')\r\n        .trim()\r\n        .required('*Povinné'),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required('*Povinné')\r\n        .min(8, 'Heslo musí mať aspoň 8 znakov')\r\n        .max(255, 'Maximálny počet znakov je 255')\r\n        .matches(/\\d/, 'Heslo musí obsahovať aspoň jednu číslicu')\r\n        .matches(/[a-zA-Z]/, 'Heslo musí obsahovať aspoň jedno písmeno'),\r\n      confirmPassword: Yup.string()\r\n        .trim()\r\n        .required('*Povinné')\r\n        .oneOf([Yup.ref('password')], 'Heslá sa musia zhodovať'),\r\n      confirmProcessData: Yup.boolean()\r\n        .required('*Povinné')\r\n        .oneOf([true], '*Povinné'),\r\n    });\r\n  } else {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required('*Povinné'),\r\n      lastname: Yup.string().trim().required('*Povinné'),\r\n      email: Yup.string()\r\n        .email('Nesprávny formát emailu')\r\n        .trim()\r\n        .required('*Povinné'),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required('*Povinné')\r\n        .min(8, 'Heslo musí mať aspoň 8 znakov')\r\n        .max(255, 'Maximálny počet znakov je 255')\r\n        .matches(/\\d/, 'Heslo musí obsahovať aspoň jednu číslicu')\r\n        .matches(/[a-zA-Z]/, 'Heslo musí obsahovať aspoň jedno písmeno'),\r\n    });\r\n  }\r\n  if (props.allowRoleChange && props.ignorePassword) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required('*Povinné'),\r\n      lastname: Yup.string().trim().required('*Povinné'),\r\n      email: Yup.string()\r\n        .email('Nesprávny formát emailu')\r\n        .trim()\r\n        .required('*Povinné'),\r\n      role: Yup.string().trim().required('*Povinné'),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values) => {\r\n          props.onSubmit(values);\r\n        }}\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"firstname\">Meno</label>\r\n                <Field\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  className={`form-control ${\r\n                    errors.firstname && touched.firstname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"firstname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"lastname\">Priezvisko</label>\r\n                <Field\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  className={`form-control ${\r\n                    errors.lastname && touched.lastname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"lastname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className={`form-control ${\r\n                    errors.email && touched.email ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"email\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            {!props.ignorePassword && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"password\">Heslo</label>\r\n                  <Field\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className={`form-control ${\r\n                      errors.password && touched.password ? 'is-invalid' : ''\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage name=\"password\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {props.registration && (\r\n              <>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <label htmlFor=\"confirmPassword\">Potvrdenie hesla</label>\r\n                    <Field\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className={`form-control ${\r\n                        errors.password && touched.password ? 'is-invalid' : ''\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage name=\"confirmPassword\">\r\n                      {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <div className=\"form-check\">\r\n                      <Field\r\n                        id=\"confirmProcessData\"\r\n                        name=\"confirmProcessData\"\r\n                        type=\"checkbox\"\r\n                        className={`form-check-input`}\r\n                      />\r\n                      <label\r\n                        htmlFor=\"confirmProcessData\"\r\n                        className=\"form-check-label\"\r\n                      >\r\n                        Súhlasím so spracovaním uvedených údajov\r\n                      </label>\r\n                      <ErrorMessage name=\"confirmProcessData\">\r\n                        {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                      </ErrorMessage>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {props.allowRoleChange && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"confirmPassword\">Rola Používateľa</label>\r\n                  <Field\r\n                    name=\"role\"\r\n                    as=\"select\"\r\n                    className={`form-control ${\r\n                      errors.role && touched.role ? 'is-invalid' : ''\r\n                    }`}\r\n                  >\r\n                    <option value={UserRole.USER}>{UserRole.USER}</option>\r\n                    <option value={UserRole.TEACHER}>{UserRole.TEACHER}</option>\r\n                    <option value={UserRole.ADMIN}>{UserRole.ADMIN}</option>\r\n                  </Field>\r\n                  <ErrorMessage name=\"role\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-responsive\">\r\n                {props.onSubmitText}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { useContext, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport UserForm from '../components/users/UserForm';\r\nimport AuthContext from '../store/auth-context';\r\n\r\nconst RegistrationPage: React.FC = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n  const { isLoggedIn, user, resetStateVariables } = authContext;\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    resetStateVariables();\r\n    if (isLoggedIn && user) {\r\n      navigate('/');\r\n    }\r\n  }, [isLoggedIn, user, navigate, resetStateVariables]);\r\n\r\n  return (\r\n    <section className=\"logreg-container\">\r\n      <h3 className=\"text-center\">Registrácia</h3>\r\n      <UserForm\r\n        registration={true}\r\n        onSubmitText={'Zaregistrovať'}\r\n        onSubmit={(val: any) => {\r\n          authContext.register({\r\n            firstname: val.firstname,\r\n            lastname: val.lastname,\r\n            confirmPassword: val.confirmPassword,\r\n            password: val.password,\r\n            email: val.email,\r\n          });\r\n        }}\r\n      />\r\n      <div className=\"mt-4 text-center\">\r\n        <p>\r\n          Už máte účet?\r\n          <Link to={'/login'} className=\"ms-2\">\r\n            Prihláste sa\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      {authContext.error !== '' && (\r\n        <div className=\"centered h4 error-msg\">\r\n          <p>{authContext.error}</p>\r\n        </div>\r\n      )}\r\n      {authContext.isLoading && authContext.error === '' && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n"],"names":["props","validationSchema","initialValues","formData","firstname","lastname","email","password","role","UserRole","confirmPassword","confirmProcessData","registration","Yup","trim","required","min","max","matches","oneOf","allowRoleChange","ignorePassword","onSubmit","values","errors","touched","className","htmlFor","id","name","msg","type","as","value","onSubmitText","authContext","useContext","AuthContext","isLoggedIn","user","resetStateVariables","navigate","useNavigate","useEffect","val","register","to","error","isLoading"],"sourceRoot":""}