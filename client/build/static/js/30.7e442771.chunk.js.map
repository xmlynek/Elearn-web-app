{"version":3,"file":"static/js/30.7e442771.chunk.js","mappings":"kPAyHA,UAzG4B,WAAO,IAAD,EAC1BA,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAEvBC,EACNH,EADMG,WAAYC,EAClBJ,EADkBI,KAAMC,EACxBL,EADwBK,MAAOC,EAC/BN,EAD+BM,UAAWC,EAC1CP,EAD0CO,MAAOC,EACjDR,EADiDQ,oBAG7CC,GAAeC,EAAAA,EAAAA,KAEfC,GAAWC,EAAAA,EAAAA,MAEXC,GADWC,EAAAA,EAAAA,MACMD,MACjBE,EAAI,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAOE,YAAV,aAAG,EAAaC,SAS1B,OAPAC,EAAAA,EAAAA,YAAU,WACRT,IACIL,GAAcC,GAChBO,EAASI,GAAc,IAAK,CAAEG,SAAS,MAExC,CAACf,EAAYC,EAAMO,EAAUI,EAAMP,KAGpC,qBAASW,UAAU,8BAAnB,WACE,eAAIA,UAAU,cAAd,gBAA6BV,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAcW,qBAC3C,SAAC,KAAD,CACEC,iBAAkBC,EAAAA,GAAW,CAC3BC,MAAOD,EAAAA,KACJC,MADI,OACEd,QADF,IACEA,OADF,EACEA,EAAce,qBACpBC,OACAC,SAHI,OAGKjB,QAHL,IAGKA,OAHL,EAGKA,EAAckB,eAC1BC,SAAUN,EAAAA,KAAaI,SAAb,OAAsBjB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAckB,iBAEhDE,cAAe,CAAEN,MAAO,GAAIK,SAAU,IACtCE,SAAU,cAAyC,IAAtCP,EAAqC,EAArCA,MAAOK,EAA8B,EAA9BA,SAAcG,EAAgB,EAAhBA,UAChCxB,EAAMgB,EAAOK,EAAUb,GACvBgB,KAXJ,SAcG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,CAAMd,UAAS,qBAAf,WACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,eAAf,WACE,kBAAOe,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,KAAK,QACLhB,UAAS,uBACPa,EAAOT,OAASU,EAAQV,MAAQ,aAAe,OAGnD,SAAC,KAAD,CAAcY,KAAK,QAAnB,SACG,SAACC,GAAD,OAAS,gBAAKjB,UAAU,YAAf,SAA4BiB,aAK5C,gBAAKjB,UAAU,YAAf,UACE,iBAAKA,UAAU,eAAf,WACE,kBAAOe,QAAQ,WAAf,gBAA2BzB,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAc4B,iBACzC,SAAC,KAAD,CACEF,KAAK,WACLG,KAAK,WACLnB,UAAS,uBACPa,EAAOJ,UAAYK,EAAQL,SAAW,aAAe,OAGzD,SAAC,KAAD,CAAcO,KAAK,WAAnB,SACG,SAACC,GAAD,OAAS,gBAAKjB,UAAU,YAAf,SAA4BiB,aAI5C,gBAAKjB,UAAU,cAAf,UACE,SAAC,IAAD,CAAQmB,KAAK,SAASnB,UAAU,oBAAhC,gBACGV,QADH,IACGA,OADH,EACGA,EAAc8B,gBAGnB,iBAAKpB,UAAU,mBAAf,WACE,0CACMV,QADN,IACMA,OADN,EACMA,EAAc+B,oBADpB,MAEE,SAAC,KAAD,CAAMC,GAAI,mBAAoBtB,UAAU,OAAxC,gBACGV,QADH,IACGA,OADH,EACGA,EAAciC,4BAGnB,gCACGjC,QADH,IACGA,OADH,EACGA,EAAckC,yBACf,SAAC,KAAD,CAAMF,GAAI,YAAatB,UAAU,OAAjC,gBACGV,QADH,IACGA,OADH,EACGA,EAAcmC,iCAOhB,KAAVvC,IACC,gBAAKc,UAAU,wBAAf,UACE,uBAAId,MAGPC,GAAuB,KAAVD,IACZ,gBAAKc,UAAU,WAAf,UACE,SAAC,IAAD","sources":["pages/LoginPage.tsx"],"sourcesContent":["import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useLangTranslation from '../hooks/useLangTranslation';\r\nimport AuthContext from '../store/auth-context';\r\n\r\ninterface CustomizedState {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { isLoggedIn, user, error, isLoading, login, resetStateVariables } =\r\n    authContext;\r\n\r\n  const translations = useLangTranslation();\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const state = location.state as CustomizedState;\r\n  const from = state?.from?.pathname;\r\n\r\n  useEffect(() => {\r\n    resetStateVariables();\r\n    if (isLoggedIn && user) {\r\n      navigate(from ? from : '/', { replace: true });\r\n    }\r\n  }, [isLoggedIn, user, navigate, from, resetStateVariables]);\r\n\r\n  return (\r\n    <section className=\"logreg-container text-start\">\r\n      <h3 className=\"text-center\">{translations?.loginNavbarHeader}</h3>\r\n      <Formik\r\n        validationSchema={Yup.object({\r\n          email: Yup.string()\r\n            .email(translations?.wrongEmailFormatErr)\r\n            .trim()\r\n            .required(translations?.isRequiredErr),\r\n          password: Yup.string().required(translations?.isRequiredErr),\r\n        })}\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={({ email, password }, { resetForm }) => {\r\n          login(email, password, from);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  className={`form-control ${\r\n                    errors.email && touched.email ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"email\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"password\">{translations?.passwordLabel}</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={`form-control ${\r\n                    errors.password && touched.password ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"password\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-50-991-100 \">\r\n                {translations?.logInLabel}\r\n              </Button>\r\n            </div>\r\n            <div className=\"mt-4 text-center\">\r\n              <p>\r\n                {`${translations?.forgotPasswordLabel}?`}\r\n                <Link to={'/forgot-password'} className=\"ms-2\">\r\n                  {translations?.restorePasswordHeader}\r\n                </Link>\r\n              </p>\r\n              <p>\r\n                {translations?.dontHaveAccountQuestion}\r\n                <Link to={'/register'} className=\"ms-2\">\r\n                  {translations?.createAccountLabel}\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      {error !== '' && (\r\n        <div className=\"centered h4 error-msg\">\r\n          <p>{error}</p>\r\n        </div>\r\n      )}\r\n      {isLoading && error === '' && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["authContext","useContext","AuthContext","isLoggedIn","user","error","isLoading","login","resetStateVariables","translations","useLangTranslation","navigate","useNavigate","state","useLocation","from","pathname","useEffect","replace","className","loginNavbarHeader","validationSchema","Yup","email","wrongEmailFormatErr","trim","required","isRequiredErr","password","initialValues","onSubmit","resetForm","errors","touched","htmlFor","name","msg","passwordLabel","type","logInLabel","forgotPasswordLabel","to","restorePasswordHeader","dontHaveAccountQuestion","createAccountLabel"],"sourceRoot":""}