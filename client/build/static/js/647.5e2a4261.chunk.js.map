{"version":3,"file":"static/js/647.5e2a4261.chunk.js","mappings":"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","sources":["components/Layout/ContainerWrapper.tsx","components/Layout/ModalLayout.tsx","components/users/UserForm.tsx","webpack://bp-frontend-typescript/./src/components/users/UserList.module.css?fba0","components/users/UserList.tsx","pages/AllUsersPage.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["import { Container } from \"react-bootstrap\";\r\n\r\nconst ContainerWrapper: React.FC = (props) => {\r\n  return (\r\n    <Container className=\"container-content my-sm-4 my-xl-5 pb-3 pb-sm-4 pb-lg-5\">\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContainerWrapper;\r\n","import { Modal } from 'react-bootstrap';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  title: string | React.ReactNode;\r\n  show: boolean;\r\n  onHide: () => void;\r\n  backdropType?: string;\r\n};\r\n\r\nconst ModalLayout: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className={props.className}\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size={'lg'}\r\n        backdrop={props.backdropType === 'static' ? 'static' : true}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {props.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>{translations?.modalLayoutBodyLabel}</h5>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport User, { UserRole } from '../../models/User';\r\nimport * as Yup from 'yup';\r\nimport { Button } from 'react-bootstrap';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  formData?: User;\r\n  onSubmit: Function;\r\n  onSubmitText?: string | React.ReactNode;\r\n  registration?: boolean;\r\n  ignorePassword?: boolean;\r\n  allowRoleChange?: boolean;\r\n};\r\n\r\nconst UserForm: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  const initialValues = props.formData\r\n    ? {\r\n        firstname: props.formData.firstname,\r\n        lastname: props.formData.lastname,\r\n        email: props.formData.email,\r\n        password: '',\r\n        role: props.formData.role,\r\n      }\r\n    : {\r\n        email: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        role: UserRole.STUDENT,\r\n        password: '',\r\n        confirmPassword: '',\r\n        confirmProcessData: props.registration ? false : true,\r\n      };\r\n\r\n  let validationSchema;\r\n\r\n  if (props.registration) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .min(8, translations?.passwordLengthErr)\r\n        .max(255, translations?.maxCharLengthErr)\r\n        .matches(/\\d/, translations?.passwordMustContainNumberErr)\r\n        .matches(/[a-zA-Z]/, translations?.passwordMustContainLetterErr),\r\n      confirmPassword: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .oneOf([Yup.ref('password')], translations?.passwordMustMatchErr),\r\n      confirmProcessData: Yup.boolean()\r\n        .required(translations?.isRequiredErr)\r\n        .oneOf([true], translations?.isRequiredErr),\r\n    });\r\n  } else {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .min(8, translations?.passwordLengthErr)\r\n        .max(255, translations?.maxCharLengthErr)\r\n        .matches(/\\d/, translations?.passwordMustContainNumberErr)\r\n        .matches(/[a-zA-Z]/, translations?.passwordMustContainLetterErr),\r\n    });\r\n  }\r\n  if (props.allowRoleChange && props.ignorePassword) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      role: Yup.string().trim().required(translations?.isRequiredErr),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values) => {\r\n          props.onSubmit(values);\r\n        }}\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"firstname\">\r\n                  {translations?.firstNameLabel}\r\n                </label>\r\n                <Field\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  className={`form-control ${\r\n                    errors.firstname && touched.firstname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"firstname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"lastname\">{translations?.lastNameLabel}</label>\r\n                <Field\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  className={`form-control ${\r\n                    errors.lastname && touched.lastname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"lastname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className={`form-control ${\r\n                    errors.email && touched.email ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"email\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            {!props.ignorePassword && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"password\">\r\n                    {translations?.passwordLabel}\r\n                  </label>\r\n                  <Field\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className={`form-control ${\r\n                      errors.password && touched.password ? 'is-invalid' : ''\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage name=\"password\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {props.registration && (\r\n              <>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <label htmlFor=\"confirmPassword\">\r\n                      {translations?.confirmPasswordLabel}\r\n                    </label>\r\n                    <Field\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className={`form-control ${\r\n                        errors.password && touched.password ? 'is-invalid' : ''\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage name=\"confirmPassword\">\r\n                      {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <div className=\"form-check\">\r\n                      <Field\r\n                        id=\"confirmProcessData\"\r\n                        name=\"confirmProcessData\"\r\n                        type=\"checkbox\"\r\n                        className={`form-check-input`}\r\n                      />\r\n                      <label\r\n                        htmlFor=\"confirmProcessData\"\r\n                        className=\"form-check-label\"\r\n                      >\r\n                        {translations?.consentToDataProcessingLabel}\r\n                      </label>\r\n                      <ErrorMessage name=\"confirmProcessData\">\r\n                        {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                      </ErrorMessage>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {props.allowRoleChange && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"confirmPassword\">\r\n                    {translations?.userRoleLabel}\r\n                  </label>\r\n                  <Field\r\n                    name=\"role\"\r\n                    as=\"select\"\r\n                    className={`form-control ${\r\n                      errors.role && touched.role ? 'is-invalid' : ''\r\n                    }`}\r\n                  >\r\n                    <option value={UserRole.STUDENT}>{UserRole.STUDENT}</option>\r\n                    <option value={UserRole.TEACHER}>{UserRole.TEACHER}</option>\r\n                    <option value={UserRole.ADMIN}>{UserRole.ADMIN}</option>\r\n                  </Field>\r\n                  <ErrorMessage name=\"role\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-responsive\">\r\n                {props.onSubmitText}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flexRow\":\"UserList_flexRow__cmEyz\"};","import { ListGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\nimport User from '../../models/User';\r\nimport classes from './UserList.module.css';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  users: User[];\r\n};\r\n\r\nconst UserList: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <ListGroup>\r\n      <ListGroup.Item disabled>\r\n        <div className={classes.flexRow}>\r\n          <span>ID</span>\r\n          <span>{translations?.fullNameLabel}</span>\r\n          <span>Email</span>\r\n          <span>{translations?.userRoleLabel}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n      {props.users.map((user) => (\r\n        <ListGroup.Item\r\n          key={user.id}\r\n          action\r\n          onClick={() => {\r\n            navigate(`/users/${user.id}`);\r\n          }}\r\n        >\r\n          <div className={classes.flexRow}>\r\n            <span>{user.id} </span>\r\n            <span> {`${user.firstname} ${user.lastname}`} </span>\r\n            <span> {user.email} </span>\r\n            <span>{user.role}</span>\r\n          </div>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport ModalLayout from '../components/Layout/ModalLayout';\r\nimport ContainerWrapper from '../components/Layout/ContainerWrapper';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport ProtectedComponent from '../components/UI/ProtectedComponent';\r\nimport UserForm from '../components/users/UserForm';\r\nimport UserList from '../components/users/UserList';\r\nimport { UserRole } from '../models/User';\r\nimport UserContext from '../store/user-context';\r\nimport useLangTranslation from '../hooks/useLangTranslation';\r\n\r\nconst AllUsersPage: React.FC = (props) => {\r\n  const translations = useLangTranslation();\r\n  const userCtx = useContext(UserContext);\r\n  const { fetchAll, data, save } = userCtx;\r\n  const { error, opStatus: status, users } = data;\r\n\r\n  const [isShown, setIsShown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, [fetchAll]);\r\n\r\n  let output;\r\n\r\n  const modalFormButton = (\r\n    <ProtectedComponent requiredRole={[UserRole.ADMIN]}>\r\n      <div className=\"centered\">\r\n        <Button onClick={() => setIsShown(true)}>\r\n          {translations?.createNewUserTitle}\r\n        </Button>\r\n        <ModalLayout\r\n          title={translations?.createNewUserTitle}\r\n          backdropType={'static'}\r\n          show={isShown}\r\n          onHide={() => setIsShown(false)}\r\n        >\r\n          <UserForm\r\n            allowRoleChange={true}\r\n            onSubmit={(values: any) => {\r\n              save({\r\n                role: values.role,\r\n                email: values.email,\r\n                firstname: values.firstname,\r\n                lastname: values.lastname,\r\n                password: values.password,\r\n              });\r\n              setIsShown(false);\r\n            }}\r\n            onSubmitText={translations?.createUserSubmitButtonTitle}\r\n          />\r\n        </ModalLayout>\r\n      </div>\r\n    </ProtectedComponent>\r\n  );\r\n\r\n  if (status === 'Pending') {\r\n    output = (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || status === 'Failure') {\r\n    output = <p className=\"centered h4 error-msg\">{error}</p>;\r\n  }\r\n\r\n  if (status === 'Finished' && (!users || users.length === 0)) {\r\n    output = (\r\n      <>\r\n        <div className=\"centered\">\r\n          <p className=\"h4\">{translations?.noUsersFound}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'Finished' && !error && users && users.length > 0) {\r\n    output = (\r\n      <>\r\n        <div className=\"maxwidth-720\">\r\n          <UserList users={users} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerWrapper>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"centered\">\r\n            <h2 className=\"display-2 txt-main\">\r\n              {translations?.userListPageHeader}\r\n            </h2>\r\n          </div>\r\n          {modalFormButton}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>{output}</Col>\r\n      </Row>\r\n    </ContainerWrapper>\r\n  );\r\n};\r\n\r\nexport default AllUsersPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["props","className","children","translations","useLangTranslation","show","onHide","size","backdrop","backdropType","centered","closeButton","id","title","modalLayoutBodyLabel","validationSchema","initialValues","formData","firstname","lastname","email","password","role","UserRole","confirmPassword","confirmProcessData","registration","Yup","trim","required","isRequiredErr","wrongEmailFormatErr","min","passwordLengthErr","max","maxCharLengthErr","matches","passwordMustContainNumberErr","passwordMustContainLetterErr","oneOf","passwordMustMatchErr","allowRoleChange","ignorePassword","onSubmit","values","errors","touched","htmlFor","firstNameLabel","name","msg","lastNameLabel","passwordLabel","type","confirmPasswordLabel","consentToDataProcessingLabel","userRoleLabel","as","value","onSubmitText","navigate","useNavigate","ListGroup","disabled","classes","fullNameLabel","users","map","user","action","onClick","output","userCtx","useContext","UserContext","fetchAll","data","save","error","status","opStatus","useState","isShown","setIsShown","useEffect","modalFormButton","ProtectedComponent","requiredRole","Button","createNewUserTitle","ModalLayout","UserForm","createUserSubmitButtonTitle","LoadingSpinner","length","noUsersFound","ContainerWrapper","Row","Col","userListPageHeader","ListGroupItem","React","ref","bsPrefix","active","eventKey","variant","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}