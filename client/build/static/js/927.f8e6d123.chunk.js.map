{"version":3,"file":"static/js/927.f8e6d123.chunk.js","mappings":"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","sources":["assets/icons/OptionsIcon.tsx","components/Layout/ContainerWrapper.tsx","components/Layout/ModalLayout.tsx","components/UI/ModalFormButton.tsx","components/users/UserForm.tsx","webpack://bp-frontend-typescript/./src/components/tests/EvaluatedTestsList.module.css?10f3","components/tests/EvaluatedTestsList.tsx","components/users/UserInfo.tsx","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js"],"sourcesContent":["function OptionIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"16\"\r\n      height=\"16\"\r\n      fill=\"currentColor\"\r\n      className=\"bi bi-gear mb-1\"\r\n      viewBox=\"0 0 16 16\"\r\n    >\r\n      <path d=\"M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z\" />\r\n      <path d=\"M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default OptionIcon;\r\n","import { Container } from \"react-bootstrap\";\r\n\r\nconst ContainerWrapper: React.FC = (props) => {\r\n  return (\r\n    <Container className=\"container-content my-sm-4 my-xl-5 pb-3 pb-sm-4 pb-lg-5\">\r\n      {props.children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ContainerWrapper;\r\n","import { Modal } from 'react-bootstrap';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  title: string | React.ReactNode;\r\n  show: boolean;\r\n  onHide: () => void;\r\n  backdropType?: string;\r\n};\r\n\r\nconst ModalLayout: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className={props.className}\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        size={'lg'}\r\n        backdrop={props.backdropType === 'static' ? 'static' : true}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            {props.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h5>{translations?.modalLayoutBodyLabel}</h5>\r\n          {props.children}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;\r\n","import { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ModalLayout from \"../Layout/ModalLayout\";\r\n\r\ntype Props = {\r\n  btnVariant?: string;\r\n  modalTitle: string | React.ReactNode;\r\n  btnTitle: string | React.ReactNode;\r\n  icon?: React.ReactNode;\r\n  className?: string;\r\n  callbackFunc?: Function;\r\n};\r\n\r\nconst ModalFormButton: React.FC<Props> = (props) => {\r\n  const [isShownEditForm, setIsShownEditForm] = useState<boolean>(false);\r\n\r\n  const showEditFormHandler = () => {\r\n    setIsShownEditForm(true);\r\n  };\r\n\r\n  const hideEditFormHandler = () => {\r\n    setIsShownEditForm(false);\r\n  };\r\n\r\n  const callbackHandler = props.callbackFunc\r\n    ? () => {\r\n        if (props.callbackFunc) {\r\n          props.callbackFunc();\r\n          hideEditFormHandler();\r\n        }\r\n      }\r\n    : () => {\r\n      hideEditFormHandler();\r\n      };\r\n\r\n  return (\r\n    <>\r\n      <ModalLayout\r\n        title={props.modalTitle}\r\n        backdropType={\"static\"}\r\n        show={isShownEditForm}\r\n        onHide={callbackHandler}\r\n      >\r\n        {props.children}\r\n      </ModalLayout>\r\n      <Button\r\n        className={props.className}\r\n        variant={`${props.btnVariant ? props.btnVariant : \"primary\"}`}\r\n        onClick={showEditFormHandler}\r\n      >\r\n        {props.btnTitle}\r\n        {props.icon ? <span className=\"ms-1\">{props.icon}</span> : null}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalFormButton;\r\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport User, { UserRole } from '../../models/User';\r\nimport * as Yup from 'yup';\r\nimport { Button } from 'react-bootstrap';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  formData?: User;\r\n  onSubmit: Function;\r\n  onSubmitText?: string | React.ReactNode;\r\n  registration?: boolean;\r\n  ignorePassword?: boolean;\r\n  allowRoleChange?: boolean;\r\n};\r\n\r\nconst UserForm: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  const initialValues = props.formData\r\n    ? {\r\n        firstname: props.formData.firstname,\r\n        lastname: props.formData.lastname,\r\n        email: props.formData.email,\r\n        password: '',\r\n        role: props.formData.role,\r\n      }\r\n    : {\r\n        email: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        role: UserRole.STUDENT,\r\n        password: '',\r\n        confirmPassword: '',\r\n        confirmProcessData: props.registration ? false : true,\r\n      };\r\n\r\n  let validationSchema;\r\n\r\n  if (props.registration) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .min(8, translations?.passwordLengthErr)\r\n        .max(255, translations?.maxCharLengthErr)\r\n        .matches(/\\d/, translations?.passwordMustContainNumberErr)\r\n        .matches(/[a-zA-Z]/, translations?.passwordMustContainLetterErr),\r\n      confirmPassword: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .oneOf([Yup.ref('password')], translations?.passwordMustMatchErr),\r\n      confirmProcessData: Yup.boolean()\r\n        .required(translations?.isRequiredErr)\r\n        .oneOf([true], translations?.isRequiredErr),\r\n    });\r\n  } else {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      password: Yup.string()\r\n        .trim()\r\n        .required(translations?.isRequiredErr)\r\n        .min(8, translations?.passwordLengthErr)\r\n        .max(255, translations?.maxCharLengthErr)\r\n        .matches(/\\d/, translations?.passwordMustContainNumberErr)\r\n        .matches(/[a-zA-Z]/, translations?.passwordMustContainLetterErr),\r\n    });\r\n  }\r\n  if (props.allowRoleChange && props.ignorePassword) {\r\n    validationSchema = Yup.object({\r\n      firstname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      lastname: Yup.string().trim().required(translations?.isRequiredErr),\r\n      email: Yup.string()\r\n        .email(translations?.wrongEmailFormatErr)\r\n        .trim()\r\n        .required(translations?.isRequiredErr),\r\n      role: Yup.string().trim().required(translations?.isRequiredErr),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        onSubmit={(values) => {\r\n          props.onSubmit(values);\r\n        }}\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className={`form-floating mb-3`}>\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"firstname\">\r\n                  {translations?.firstNameLabel}\r\n                </label>\r\n                <Field\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  className={`form-control ${\r\n                    errors.firstname && touched.firstname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"firstname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"lastname\">{translations?.lastNameLabel}</label>\r\n                <Field\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  className={`form-control ${\r\n                    errors.lastname && touched.lastname ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"lastname\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mb-4\">\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className={`form-control ${\r\n                    errors.email && touched.email ? 'is-invalid' : ''\r\n                  }`}\r\n                />\r\n                <ErrorMessage name=\"email\">\r\n                  {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                </ErrorMessage>\r\n              </div>\r\n            </div>\r\n\r\n            {!props.ignorePassword && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"password\">\r\n                    {translations?.passwordLabel}\r\n                  </label>\r\n                  <Field\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className={`form-control ${\r\n                      errors.password && touched.password ? 'is-invalid' : ''\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage name=\"password\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {props.registration && (\r\n              <>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <label htmlFor=\"confirmPassword\">\r\n                      {translations?.confirmPasswordLabel}\r\n                    </label>\r\n                    <Field\r\n                      id=\"confirmPassword\"\r\n                      name=\"confirmPassword\"\r\n                      type=\"password\"\r\n                      className={`form-control ${\r\n                        errors.password && touched.password ? 'is-invalid' : ''\r\n                      }`}\r\n                    />\r\n                    <ErrorMessage name=\"confirmPassword\">\r\n                      {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                    </ErrorMessage>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-3 mb-4\">\r\n                  <div className=\"form-control\">\r\n                    <div className=\"form-check\">\r\n                      <Field\r\n                        id=\"confirmProcessData\"\r\n                        name=\"confirmProcessData\"\r\n                        type=\"checkbox\"\r\n                        className={`form-check-input`}\r\n                      />\r\n                      <label\r\n                        htmlFor=\"confirmProcessData\"\r\n                        className=\"form-check-label\"\r\n                      >\r\n                        {translations?.consentToDataProcessingLabel}\r\n                      </label>\r\n                      <ErrorMessage name=\"confirmProcessData\">\r\n                        {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                      </ErrorMessage>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {props.allowRoleChange && (\r\n              <div className=\"mt-3 mb-4\">\r\n                <div className=\"form-control\">\r\n                  <label htmlFor=\"confirmPassword\">\r\n                    {translations?.userRoleLabel}\r\n                  </label>\r\n                  <Field\r\n                    name=\"role\"\r\n                    as=\"select\"\r\n                    className={`form-control ${\r\n                      errors.role && touched.role ? 'is-invalid' : ''\r\n                    }`}\r\n                  >\r\n                    <option value={UserRole.STUDENT}>{UserRole.STUDENT}</option>\r\n                    <option value={UserRole.TEACHER}>{UserRole.TEACHER}</option>\r\n                    <option value={UserRole.ADMIN}>{UserRole.ADMIN}</option>\r\n                  </Field>\r\n                  <ErrorMessage name=\"role\">\r\n                    {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n                  </ErrorMessage>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"text-center\">\r\n              <Button type=\"submit\" className=\"width-responsive\">\r\n                {props.onSubmitText}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"flexRow\":\"EvaluatedTestsList_flexRow__dRhae\"};","import { ListGroup } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\nimport { EvalutedTest } from '../../models/EvaluatedTest';\r\nimport classes from './EvaluatedTestsList.module.css';\r\n\r\ntype Props = {\r\n  tests: EvalutedTest[];\r\n};\r\n\r\nconst EvaluatedTestsList: React.FC<Props> = (props) => {\r\n  const navigate = useNavigate();\r\n  const translations = useLangTranslation();\r\n  const { tests } = props;\r\n\r\n  const onClickHandler = (evalTestId: number, userId: number) => {\r\n    navigate(`/users/${userId}/tests/${evalTestId}`);\r\n  };\r\n\r\n  if (tests.length === 0) {\r\n    return <div className=\"centered\">{translations?.noEvalTestsFound}</div>;\r\n  }\r\n\r\n  return (\r\n    <ListGroup className=\"mx-1 mx-md-2 mx-lg-4 my-4\">\r\n      <ListGroup.Item disabled>\r\n        <div className={classes.flexRow}>\r\n          <span>Test ID</span>\r\n          <span>{translations?.testTitleHeader}</span>\r\n          <span>{translations?.evaluationPointsLabel}</span>\r\n          <span>{translations?.submitTestTimeLabel}</span>\r\n        </div>\r\n      </ListGroup.Item>\r\n      {tests.map((test) => (\r\n        <ListGroup.Item\r\n          key={test.id}\r\n          action\r\n          onClick={onClickHandler.bind(null, test.id, test.userId)}\r\n        >\r\n          <div className={classes.flexRow}>\r\n            <span> {test.test.id} </span>\r\n            <span> {test.test.title} </span>\r\n            <span> {`${test.resultPoints}/${test.maxPoints}`} </span>\r\n            <span> {new Date(test.finished_at).toLocaleString()} </span>\r\n          </div>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default EvaluatedTestsList;\r\n","import { useState } from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport usePrivateAxios from '../../hooks/usePrivateAccessTokenAxios';\r\nimport { EvalutedTest } from '../../models/EvaluatedTest';\r\nimport User from '../../models/User';\r\nimport EvaluatedTestsList from '../tests/EvaluatedTestsList';\r\nimport ContainerWrapper from '../Layout/ContainerWrapper';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  user: User;\r\n  header?: string | React.ReactNode;\r\n};\r\n\r\nconst UserInfo: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n  const { user, header } = props;\r\n\r\n  const [evalTests, setEvalTests] = useState<EvalutedTest[]>();\r\n\r\n  const [state, setState] = useState<{\r\n    status?: 'err' | 'success';\r\n    isLoading: boolean;\r\n    msg?: string;\r\n  }>({\r\n    status: 'success',\r\n    isLoading: false,\r\n  });\r\n  const axiosPrivate = usePrivateAxios('/users');\r\n\r\n  const loadTestsHandler = async () => {\r\n    try {\r\n      setEvalTests([]);\r\n      setState({ isLoading: true });\r\n      const res = await axiosPrivate.get(`${user.id}/tests`);\r\n      setState({ status: 'success', isLoading: false });\r\n      setEvalTests(res.data);\r\n    } catch (err: any) {\r\n      setState({\r\n        status: 'err',\r\n        isLoading: false,\r\n        msg: err?.response?.data?.message\r\n          ? err?.response?.data?.message\r\n          : err.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  const evalTestListOutput = (\r\n    <>\r\n      {state.isLoading && (\r\n        <div className=\"centered\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {state.status === 'err' && !state.isLoading && (\r\n        <div className=\"centered error-msg\">\r\n          <p className=\"h4\">{state.msg}</p>\r\n        </div>\r\n      )}\r\n      {state.status === 'success' && !state.isLoading && evalTests && (\r\n        <div className=\"mt-4\">\r\n          <h3>{translations?.evaluatedTestListLabel}</h3>\r\n          <EvaluatedTestsList tests={evalTests} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ContainerWrapper>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"centered\">\r\n            <h2 className=\"display-2 txt-main\">\r\n              {header ? header : `${translations?.userProfileOfHeader} ${user.firstname}`}\r\n            </h2>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"float-end\">ID</p>\r\n          </Col>\r\n          <Col>{user.id}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"float-end\">{translations?.firstNameLabel}</p>\r\n          </Col>\r\n          <Col>{user.firstname}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"float-end\">{translations?.lastNameLabel}</p>\r\n          </Col>\r\n          <Col>{user.lastname}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"float-end\">Email</p>\r\n          </Col>\r\n          <Col>{user.email}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"float-end\">{translations?.userRoleLabel}</p>\r\n          </Col>\r\n          <Col>{user.role}</Col>\r\n        </Row>\r\n\r\n        <div className=\"text-center mt-3\">{props.children}</div>\r\n        <div className=\"text-center mt-2\">\r\n          <Button onClick={loadTestsHandler} className=\"me-2 width-50-991-100\">\r\n            {translations?.showEvaluatedTestListLabel}\r\n          </Button>\r\n          {evalTestListOutput}\r\n        </div>\r\n      </Row>\r\n    </ContainerWrapper>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});"],"names":["xmlns","width","height","fill","className","viewBox","d","props","children","translations","useLangTranslation","show","onHide","size","backdrop","backdropType","centered","closeButton","id","title","modalLayoutBodyLabel","useState","isShownEditForm","setIsShownEditForm","hideEditFormHandler","callbackHandler","callbackFunc","modalTitle","variant","btnVariant","onClick","btnTitle","icon","validationSchema","initialValues","formData","firstname","lastname","email","password","role","UserRole","confirmPassword","confirmProcessData","registration","Yup","trim","required","isRequiredErr","wrongEmailFormatErr","min","passwordLengthErr","max","maxCharLengthErr","matches","passwordMustContainNumberErr","passwordMustContainLetterErr","oneOf","passwordMustMatchErr","allowRoleChange","ignorePassword","onSubmit","values","errors","touched","htmlFor","firstNameLabel","name","msg","lastNameLabel","passwordLabel","type","confirmPasswordLabel","consentToDataProcessingLabel","userRoleLabel","as","value","onSubmitText","navigate","useNavigate","tests","onClickHandler","evalTestId","userId","length","noEvalTestsFound","ListGroup","disabled","classes","testTitleHeader","evaluationPointsLabel","submitTestTimeLabel","map","test","action","bind","resultPoints","maxPoints","Date","finished_at","toLocaleString","user","header","evalTests","setEvalTests","status","isLoading","state","setState","axiosPrivate","usePrivateAxios","loadTestsHandler","get","res","data","response","message","evalTestListOutput","LoadingSpinner","evaluatedTestListLabel","ContainerWrapper","Row","Col","userProfileOfHeader","Button","showEvaluatedTestListLabel","ListGroupItem","React","ref","bsPrefix","active","eventKey","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","preventDefault","stopPropagation","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item"],"sourceRoot":""}