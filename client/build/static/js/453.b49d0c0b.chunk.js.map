{"version":3,"file":"static/js/453.b49d0c0b.chunk.js","mappings":"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","sources":["components/UI/ConfirmDialogButton.tsx","webpack://bp-frontend-typescript/./src/components/videos/VideoForm.module.css?feb3","components/videos/VideoForm.tsx","components/videos/Video.tsx","components/videos/VideoList.tsx","pages/VideoListPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ConfirmModalDialog from \"./ConfirmModalDialog\";\r\n\r\ntype Props = {\r\n  bodyMessage: string | React.ReactNode;\r\n  title: string | React.ReactNode;\r\n  confirmBtnTitle: string | React.ReactNode;\r\n  confirmBtnVariant?: string;\r\n  className?: string;\r\n  icon?: React.ReactNode;\r\n  onConfirm: () => void;\r\n};\r\n\r\nconst ConfirmDialogButton: React.FC<Props> = (props) => {\r\n  const [isShowedDialog, setIsShowedDialog] = useState<boolean>(false);\r\n\r\n  const hideDialogHandler = () => {\r\n    setIsShowedDialog(false);\r\n  };\r\n\r\n  const showDialogHandler = () => {\r\n    setIsShowedDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ConfirmModalDialog\r\n        show={isShowedDialog}\r\n        bodyMessage={props.bodyMessage}\r\n        onHide={hideDialogHandler}\r\n        title={props.title}\r\n        onConfirm={props.onConfirm}\r\n      />\r\n      <Button\r\n        variant={props.confirmBtnVariant ? props.confirmBtnVariant : \"danger\"}\r\n        onClick={showDialogHandler}\r\n        className={props.className}\r\n      >\r\n        {props.confirmBtnTitle}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialogButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"VideoForm_form__8XQfe\",\"btn\":\"VideoForm_btn__DOfAx\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\nimport VideoClass from '../../models/VideoClass';\r\nimport classes from './VideoForm.module.css';\r\n\r\ntype Props = {\r\n  video?: VideoClass | null;\r\n  onSubmit: (data: any) => void;\r\n  submitBtnText: string | React.ReactNode;\r\n};\r\n\r\ntype FormValues = {\r\n  title: string;\r\n  author: string;\r\n  description: string;\r\n  url: string;\r\n  length: number;\r\n};\r\n\r\nconst URL = 'https://www.youtube-nocookie.com/embed/';\r\n\r\nconst VideoForm: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  const initValues: FormValues =\r\n    props.video != null\r\n      ? {\r\n          title: props.video.title,\r\n          author: props.video.author,\r\n          description: props.video.description,\r\n          url: props.video.url.replace(URL, ''),\r\n          length: props.video.length,\r\n        }\r\n      : {\r\n          title: '',\r\n          author: '',\r\n          description: '',\r\n          length: 0,\r\n          url: '',\r\n        };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initValues}\r\n      validationSchema={Yup.object({\r\n        title: Yup.string().trim().required(translations?.isRequiredErr),\r\n        author: Yup.string().trim().required(translations?.isRequiredErr),\r\n        description: Yup.string().trim().required(translations?.isRequiredErr),\r\n        url: Yup.string().trim().required(translations?.isRequiredErr),\r\n        length: Yup.number()\r\n          .min(1, translations?.videoMustBeAtLeast1minLongErr)\r\n          .required(translations?.isRequiredErr),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        values.url = URL + values.url;\r\n        props.onSubmit(values);\r\n        // alert(JSON.stringify(values, null, 2));\r\n      }}\r\n    >\r\n      {({ errors, touched }) => (\r\n        <Form className={`form-floating mb-3 ${classes.form}`}>\r\n          <div className=\"mt-3 mb-4\">\r\n            <label htmlFor=\"title\">{translations?.titleLabel}</label>\r\n            <Field\r\n              name=\"title\"\r\n              type=\"text\"\r\n              className={`form-control ${\r\n                errors.title && touched.title ? 'is-invalid' : ''\r\n              }`}\r\n              placeholder=\"UWB Technology\"\r\n            />\r\n            <ErrorMessage name=\"title\">\r\n              {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n            </ErrorMessage>\r\n          </div>\r\n          <div className=\"mt-1 mb-4\">\r\n            <label htmlFor=\"author\">{translations?.authorLabel}</label>\r\n            <Field\r\n              name=\"author\"\r\n              type=\"text\"\r\n              className={`form-control ${\r\n                errors.author && touched.author ? 'is-invalid' : ''\r\n              }`}\r\n              placeholder=\"FiRa Consortium\"\r\n            />\r\n            <ErrorMessage name=\"author\">\r\n              {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n            </ErrorMessage>\r\n          </div>\r\n\r\n          <div className=\"mt-1 mb-4\">\r\n            <label htmlFor=\"description\">\r\n              {translations?.descriptionLabel}\r\n            </label>\r\n            <Field\r\n              name=\"description\"\r\n              as=\"textarea\"\r\n              rows=\"5\"\r\n              className={`form-control ${\r\n                errors.description && touched.description ? 'is-invalid' : ''\r\n              }`}\r\n              placeholder={translations?.descriptionPlaceholder}\r\n            />\r\n            <ErrorMessage name=\"description\">\r\n              {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n            </ErrorMessage>\r\n          </div>\r\n\r\n          <div className=\"mt-1 mb-4\">\r\n            <label htmlFor=\"url\">{translations?.urlLinkLabel}</label>\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text d-lg-block d-none\">\r\n                  {URL}\r\n                </span>\r\n                <span className=\"input-group-text d-md-block d-lg-none d-none\">\r\n                  youtube-nocookie.com/embed/\r\n                </span>\r\n                <span className=\"input-group-text d-sm-block d-md-none d-none\">\r\n                  youtube-nocookie.com/embed/\r\n                </span>\r\n                <span className=\"input-group-text d-sm-none\">\r\n                  ...nocookie.com/embed/\r\n                </span>\r\n              </div>\r\n              <Field\r\n                name=\"url\"\r\n                type=\"text\"\r\n                className={`form-control ${\r\n                  errors.url && touched.url ? 'is-invalid' : ''\r\n                }`}\r\n                placeholder=\"J5HrtevCuXU\"\r\n              />\r\n            </div>\r\n            <ErrorMessage name=\"url\">\r\n              {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n            </ErrorMessage>\r\n          </div>\r\n\r\n          <div className=\"mt-1 mb-4\">\r\n            <label htmlFor=\"length\">\r\n              {translations?.videoMinutesLengthLabel}\r\n            </label>\r\n            <Field\r\n              name=\"length\"\r\n              type=\"number\"\r\n              className={`form-control ${\r\n                errors.length && touched.length ? 'is-invalid' : ''\r\n              }`}\r\n              placeholder=\"5\"\r\n            />\r\n            <ErrorMessage name=\"length\">\r\n              {(msg) => <div className=\"error-msg\">{msg}</div>}\r\n            </ErrorMessage>\r\n          </div>\r\n\r\n          <div className=\"text-center\">\r\n            <Button type=\"submit\" className=\"width-responsive\">\r\n              {props.submitBtnText}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default VideoForm;\r\n","import VideoClass from '../../models/VideoClass';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport VideoForm from './VideoForm';\r\nimport ProtectedComponent from '../UI/ProtectedComponent';\r\nimport { UserRole } from '../../models/User';\r\nimport ConfirmDialogButton from '../UI/ConfirmDialogButton';\r\nimport UpdateModalFormButton from '../UI/UpdateModalFormButton';\r\nimport useLangTranslation from '../../hooks/useLangTranslation';\r\n\r\ntype Props = {\r\n  className?: string;\r\n  video: VideoClass;\r\n  onModify: (body: VideoClass) => void;\r\n  onDelete: () => void;\r\n};\r\n\r\nconst Video: React.FC<Props> = (props) => {\r\n  const translations = useLangTranslation();\r\n\r\n  return (\r\n    <Accordion>\r\n      <Accordion.Item eventKey={`\"\"${props.video.id}`}>\r\n        <Accordion.Header>\r\n          <p className=\"h5\">\r\n            {props.video.title} - {props.video.author} - {props.video.length}\r\n            min\r\n          </p>\r\n        </Accordion.Header>\r\n        <Accordion.Body>\r\n          <div>\r\n            <ProtectedComponent\r\n              requiredRole={[UserRole.ADMIN, UserRole.TEACHER]}\r\n            >\r\n              <div className=\"d-flex flex-column d-md-block float-md-end\">\r\n                <UpdateModalFormButton\r\n                  modalTitle={translations?.videoUpdateModalTitle}\r\n                >\r\n                  <VideoForm\r\n                    submitBtnText={translations?.updateSubmitButtonLabel}\r\n                    video={props.video}\r\n                    onSubmit={(data: VideoClass) => props.onModify(data)}\r\n                  />\r\n                </UpdateModalFormButton>\r\n                <ConfirmDialogButton\r\n                  confirmBtnTitle={translations?.deleteLabel}\r\n                  className=\"mb-2 mt-2 mb-md-0 mt-md-0\"\r\n                  title={translations?.deleteVideoModalTitle}\r\n                  bodyMessage={translations?.deleteVideoModalLabel}\r\n                  onConfirm={props.onDelete}\r\n                />\r\n              </div>\r\n            </ProtectedComponent>\r\n            <p>\r\n              {/* {`ID: ${props.video.id}`} */}\r\n              {/* <br /> */}\r\n              {`${translations?.titleLabel}: ${props.video.title}`}\r\n              <br />\r\n              {`${translations?.authorLabel}: ${props.video.author}`}\r\n              <br />\r\n              {`${translations?.lengthLabel}: ${props.video.length} min`}\r\n              <br />\r\n              {`${translations?.descriptionLabel}: ${props.video.description}`}\r\n              <br />\r\n              {`${translations?.urlLinkLabel}: `}\r\n              {<a href={props.video.url}>{props.video.url}</a>}\r\n            </p>\r\n          </div>\r\n\r\n          <iframe\r\n            title={props.video.title}\r\n            width={'100%'}\r\n            height={'600'}\r\n            src={props.video.url}\r\n            allowFullScreen\r\n          />\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import { useContext } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport VideoClass from \"../../models/VideoClass\";\r\n\r\nimport VideoContext from \"../../store/video-context\";\r\nimport Video from \"./Video\";\r\n\r\ntype Props = {\r\n  videos: VideoClass[];\r\n};\r\n\r\nconst VideoList: React.FC<Props> = (props) => {\r\n  const videoCtx = useContext(VideoContext);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {props.videos!.map((video) => (\r\n        <Video\r\n          key={video.id}\r\n          video={video}\r\n          onModify={videoCtx.modifyVideo.bind(null, video.id)}\r\n          onDelete={videoCtx.removeVideo.bind(null, video.id)}\r\n        />\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n","import { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, Row } from 'react-bootstrap';\r\nimport VideoList from '../components/videos/VideoList';\r\nimport VideoForm from '../components/videos/VideoForm';\r\nimport VideoContext from '../store/video-context';\r\nimport ProtectedComponent from '../components/UI/ProtectedComponent';\r\nimport { UserRole } from '../models/User';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport ContainerWrapper from '../components/Layout/ContainerWrapper';\r\nimport ModalLayout from '../components/Layout/ModalLayout';\r\nimport useLangTranslation from '../hooks/useLangTranslation';\r\n\r\nconst VideoListPage: React.FC = () => {\r\n  const videoCtx = useContext(VideoContext);\r\n  const translations = useLangTranslation();\r\n\r\n  const { error, opStatus: status, videos } = videoCtx.data;\r\n  const fetchAll = videoCtx.fetchVideos;\r\n\r\n  const [isShown, setIsShown] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, [fetchAll]);\r\n\r\n  let output;\r\n\r\n  const modalFormButton = (\r\n    <ProtectedComponent requiredRole={[UserRole.ADMIN, UserRole.TEACHER]}>\r\n      <div className=\"centered\">\r\n        <Button onClick={() => setIsShown(true)}>\r\n          {translations?.createNewVideoTitle}\r\n        </Button>\r\n        <ModalLayout\r\n          title={translations?.createNewVideoTitle}\r\n          backdropType={'static'}\r\n          show={isShown}\r\n          onHide={() => setIsShown(false)}\r\n        >\r\n          <VideoForm\r\n            submitBtnText={translations?.createVideoSubmitButtonTitle}\r\n            onSubmit={(data) => {\r\n              videoCtx.addVideo(data);\r\n              setIsShown(false);\r\n            }}\r\n          />\r\n        </ModalLayout>\r\n      </div>\r\n    </ProtectedComponent>\r\n  );\r\n\r\n  if (status === 'Pending') {\r\n    output = (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || status === 'Failure') {\r\n    output = <p className=\"centered h4 error-msg\">{error}</p>;\r\n  }\r\n\r\n  if (status === 'Finished' && (!videos || videos.length === 0)) {\r\n    output = (\r\n      <>\r\n        <div className=\"centered\">\r\n          <p className=\"h4\">{translations?.noVideosFound}</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (status === 'Finished' && !error && videos && videos.length > 0) {\r\n    output = (\r\n      <>\r\n        <div className=\"maxwidth-720\">\r\n          <VideoList videos={videos} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerWrapper>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"centered\">\r\n            <h2 className=\"display-2 txt-main\">\r\n              {translations?.videoListHeader}\r\n            </h2>\r\n          </div>\r\n          {modalFormButton}\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>{output}</Col>\r\n      </Row>\r\n    </ContainerWrapper>\r\n  );\r\n};\r\n\r\nexport default VideoListPage;\r\n"],"names":["props","useState","isShowedDialog","setIsShowedDialog","show","bodyMessage","onHide","title","onConfirm","variant","confirmBtnVariant","onClick","className","confirmBtnTitle","URL","translations","useLangTranslation","initValues","video","author","description","url","replace","length","initialValues","validationSchema","Yup","trim","required","isRequiredErr","min","videoMustBeAtLeast1minLongErr","onSubmit","values","setSubmitting","errors","touched","classes","htmlFor","titleLabel","name","type","placeholder","msg","authorLabel","descriptionLabel","as","rows","descriptionPlaceholder","urlLinkLabel","videoMinutesLengthLabel","Button","submitBtnText","Accordion","eventKey","id","ProtectedComponent","requiredRole","UserRole","UpdateModalFormButton","modalTitle","videoUpdateModalTitle","updateSubmitButtonLabel","data","onModify","ConfirmDialogButton","deleteLabel","deleteVideoModalTitle","deleteVideoModalLabel","onDelete","lengthLabel","href","width","height","src","allowFullScreen","videoCtx","useContext","VideoContext","ListGroup","videos","map","modifyVideo","bind","removeVideo","output","error","status","opStatus","fetchAll","fetchVideos","isShown","setIsShown","useEffect","modalFormButton","createNewVideoTitle","ModalLayout","backdropType","createVideoSubmitButtonTitle","addVideo","LoadingSpinner","noVideosFound","ContainerWrapper","Row","Col","videoListHeader"],"sourceRoot":""}